<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAA9QAAABaCAYAAABZhh6xAAAABGdBTUEAALGPC/xhBQAAGhlJREFUeF7t
        3QGklecfwPGZmcxMMkkymWSSyZVMkkmS5MqVJMkkMzNJ8jeTJJnJTCZJklyTZGaSzCTJJJNkJskkk1yT
        ZDIz4/37PnvPdnb2e+895z3n3vOe834//Pz/q/e+95znnpv39zy/5/c8l0mSJEmSpI6ZUEuSJEmSVIIJ
        tSRJkiRJJZhQS5IkSZJUggm1JEmSJEklmFBLkiRJklSCCbVKu3v3bvb777/n/yVJkiRJ9WJCrVJOnjyZ
        zZo1K1u5cmX2+PHj/E8lSZIkqT5MqNWRZ8+eZdu2bcuee+65v2PRokXZgwcP8iskSZIkqR5MqNW2H374
        IXvjjTf+lUw3J9UTExP5lZIkSZI0/Eyo1Zbx8fHspZdeCpPpRoyMjORXayoHDhzIvvrqK/egS5IkSQPM
        hFqT+uOPP7IPPvggTKCb4+WXX84uX76cf5Umw0p/Y9xeeeWVbPv27dmFCxfSWEuSJEkaHCbUKvTo0aPU
        dKw5cS6KTZs2ZZ988kn22WefZceOHctOnTqVffHFF2kV9ptvvsmuX7+eEsmff/45+/XXX/PvUE/79u0L
        x3D27NnZO++8k8brzz//zK+WJEmSVFWVTKhpcHXt2rXs3Llz2ZkzZ7Lz589nN2/ezP9WM+G7777L5s2b
        FyZ+vYgXX3wxmz9/frZs2bJsw4YN2aFDh/LvPPxef/31cEya49VXX83efffd9HOQJEmSVE2VS6iby2Gb
        g8RLM+P06dMp4Y1+DtMV7733Xv7dhxtnd0fvf7Kg4dvhw4fT6n5d8BlcsWJF9tZbb6UqidWrV2dvv/12
        tmbNmmzt2rXZunXr0kTMxo0bs9HR0VQhMTY2lm3dujWt8jMZsXv37lQNsH///jRhQwXF0aNHs+PHj6f7
        U0Hx5ZdfZpcuXcquXr2aJu34+Tx8+DB7+vSpVQKSJEmaUuUS6h9//DFMKljVG0S8n59++in/r2ojgdiz
        Z084/tMd33//ff4qhtuJEyfC999OPP/88ymZPHv2bPbbb7/ldxxOJMvRGMx0MLE0Z86c7LXXXsuWLFmS
        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
</value>
  </data>
</root>